openapi: 3.0.2
info:
  title: 'Flora API'
  version: '1.0.0'
paths:
  /api/v1/auth/registration/:
    post:
      operationId: registration
      description: "Registration by email/password using JWT token.
      After getting token you can use `access_token` to get acces to the site.
      To do it, you need to pass the `access_token` to request header:
      `Authorization: Token <access_token>;`"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@gmail.com
                password1:
                  type: string
                  example: password
                password2:
                  type: string
                  example: password
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      tags:
      - authentication
  /api/v1/auth/login/:
    post:
      operationId: login
      description: "Login using JWT token.
      After getting token you can use `access_token` to get acces to the site.
      To do it, you need to pass the `access_token` to request header:
      `Authorization: Token <access_token>;`"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@gmail.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      tags:
      - authentication
  /api/v1/auth/logout/:
    post:
      operationId: logout
      description: Logout from current account
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Successfully logged out.
      tags:
      - authentication
  /api/v1/auth/user/:
    get:
      operationId: concreteUser
      description: Current user information
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  pk:
                    type: number
                    format: integer
                  username:
                    type: string
                    example: username
                  email:
                    type: string
                    format: email
                    example: username@gmail.com
                  first_name:
                    type: string
                    example: ""
                  second_name:
                    type: string
                    example: ""
      tags:
      - authentication
  /api/v1/projects/?page=&category=&query=:
    get:
      operationId: allProjects
      description: All art projects
      parameters:
      - name: category
        in: query
        required: false
        description: category pk field
        schema:
          type: string
          format: uuid
      - name: query
        in: query
        required: false
        description: query value that searching in title and description fields
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: page number (only 20 projects on page)
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: number
                    format: integer
                    description: Current page number
                  num_pages:
                    type: number
                    format: integer
                    description: Number of all pages
                  projects:
                    $ref: '#/components/schemas/ListProjects'
      tags:
      - projects
    post:
      operationId: createProject
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some project"
                description:
                  type: string
                  minlength: 1
                  example: "Some description"
                category:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: You are not authenticated or don't have permissions
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  description:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  category:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - projects
  /api/v1/projects/{project_pk}/:
    get:
      operationId: concreteProject
      description: The concrete project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
      - projects
    put:
      operationId: updateProject
      description: Update an existing project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some project"
                description:
                  type: string
                  minlength: 1
                  example: "Some description"
                category:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: You are not authenticated or don't have permissions
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  description:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  category:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - projects
    delete:
      operationId: deleteProject
      description: Delete an existing project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '403':
          description: You are not authenticated or don't have permissions
        '204':
          description: Successfully deleted
      tags:
      - projects
  /api/v1/projects/{project_pk}/upload_images/:
    post:
      operationId: uploadProjectImages
      description: Upload project images
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image1:
                  type: string
                  format: binary
                image2:
                  type: string
                  format: binary
                imageN:
                  type: string
                  format: binary
      responses:
        '204':
          description: Successfully added images
        '403':
          description: You are not authenticated or don't have permissions
      tags:
      - projects
  /api/v1/projects/pinned/:
    get:
      operationId: pinnedProjects
      description: All pinned projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjects'
      tags:
      - projects
  /api/v1/projects/{project_pk}/pin/:
    post:
      operationId: pinProject
      description: Mark concrete project as pinned
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  pinned:
                    type: boolean
      tags:
      - projects
  /api/v1/projects/{project_pk}/unpin/:
    post:
      operationId: unpinProject
      description: Mark concrete project as not pinned
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  unpinned:
                    type: boolean
      tags:
      - projects
  /api/v1/categories/:
    get:
      operationId: allCategories
      description: All categories of projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCategories'
      tags:
      - categories
    post:
      operationId: createCategory
      description: Create a new category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some category"
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '403':
          description: You are not authenticated or don't have permissions
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - categories
  /api/v1/categories/{category_pk}/:
    get:
      operationId: concreteCategory
      description: The concrete category
      parameters:
      - name: category_pk
        in: path
        required: true
        description: category pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      tags:
      - categories
    put:
      operationId: updateCategory
      description: Update an existing category
      parameters:
      - name: category_pk
        in: path
        required: true
        description: category pk field value (uuid)
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some category"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '403':
          description: You are not authenticated or don't have permissions
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - categories
    delete:
      operationId: deleteCategory
      description: Delete an existing category
      parameters:
      - name: category_pk
        in: path
        required: true
        description: category pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '403':
          description: You are not authenticated or don't have permissions
        '204':
          description: Successfully deleted
      tags:
      - categories

components:
  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
          description: token using to get access
          example: "<jwt_token>"
        refresh_token:
          type: string
          description: token using to refresh user token
          example: "<jwt_token>"
        user:
          type: object
          properties:
            pk:
              type: number
              format: integer
            username:
              type: string
              example: username
            email:
              type: string
              format: email
              example: username@gmail.com
            first_name:
              type: string
              example: ""
            second_name:
              type: string
              example: ""
    Project:
      type: object
      properties:
        pk:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
        title:
          type: string
          example: "Some title"
          maxLength: 255
          minLength: 1
        description:
          type: string
          example: "Some description"
          minLength: 1
        images:
          type: array
          items:
            type: string
            example: "/media/projects/some_image.png"
            minLength: 1
        pinned:
          type: boolean
        category:
          $ref: "#/components/schemas/Category"
        user:
          type: string
          example: "user"
        views:
          type: number
          format: integer
        likes:
          type: number
          format: integer
        pub_datetime:
          type: string
          example: "2021-12-17T19:26:52.517853Z"
    Category:
      type: object
      properties:
        pk:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
        title:
          type: string
          example: "Some category"
          minLength: 1
          maxLength: 255
    ListCategories:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    ListProjects:
      type: array
      items:
        type: object
        properties:
          pk:
            type: string
            format: uuid
            minLength: 36
            maxLength: 36
          preview:
            type: string
            example: "/media/projects/some_image.png"
          title:
            type: string
            example: "Some category"
            minLength: 1
            maxLength: 255
          likes:
            type: number
            format: integer
