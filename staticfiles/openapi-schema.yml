openapi: 3.0.2
info:
  title: 'Flora API'
  version: '1.0.0'
paths:
  /api/v1/projects/?page=n:
    get:
      operationId: allProjects
      description: All art projects
      parameters:
      - name: page
        in: path
        required: false
        description: page number (only 20 projects on page)
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjects'
      tags:
      - projects
    post:
      operationId: createProject
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some project"
                description:
                  type: string
                  minlength: 1
                  example: "Some description"
                category:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: You are not authenticated
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  description:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  category:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - projects
  /api/v1/projects/{project_pk}/:
    get:
      operationId: concreteProject
      description: The concrete project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
      - projects
    put:
      operationId: updateProject
      description: Update an existing project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: "Some project"
                description:
                  type: string
                  minlength: 1
                  example: "Some description"
                category:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: You are not authenticated
        '400':
          description: Error with fields values
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  description:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
                  category:
                    type: array
                    items:
                      type: string
                      example: "This field may not be blank."
      tags:
      - projects
    delete:
      operationId: deleteProject
      description: Delete an existing project
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '403':
          description: You are not authenticated
        '204':
          description: Successfully deleted
      tags:
      - projects
  /api/v1/projects/{project_pk}/upload_images/:
    post:
      operationId: uploadProjectImages
      description: Upload project images
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image1:
                  type: string
                  format: binary
                image2:
                  type: string
                  format: binary
                imageN:
                  type: string
                  format: binary
      responses:
        '204':
          description: Successfully added images
        '403':
          description: You are not authenticated
      tags:
      - projects
  /api/v1/projects/pinned/:
    get:
      operationId: pinnedProjects
      description: All pinned projects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjects'
      tags:
      - projects
  /api/v1/projects/{project_pk}/pin/:
    post:
      operationId: pinProject
      description: Mark concrete project as pinned
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  pinned:
                    type: boolean
      tags:
      - projects
  /api/v1/projects/{project_pk}/unpin/:
    post:
      operationId: unpinProject
      description: Mark concrete project as not pinned
      parameters:
      - name: project_pk
        in: path
        required: true
        description: project pk field value (uuid)
        schema:
          type: string
          format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  unpinned:
                    type: boolean
      tags:
      - projects
  /api/v1/projects/search/?category=&query=:
    get:
      operationId: searchProjects
      description: Search projects by category and query
      parameters:
      - name: category
        in: path
        required: false
        description: category pk field
        schema:
          type: string
          format: uuid
      - name: query
        in: path
        required: false
        description: query value that searching in title and description fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjects'
      tags:
      - projects

components:
  schemas:
    Project:
      type: object
      properties:
        pk:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
        title:
          type: string
          example: "Some title"
          maxLength: 255
          minLength: 1
        description:
          type: string
          example: "Some description"
          minLength: 1
        images:
          type: array
          items:
            type: string
            example: "/media/projects/some_image.png"
            minLength: 1
        pinned:
          type: boolean
        category:
          type: object
          properties:
            pk:
              type: string
              format: uuid
              minLength: 36
              maxLength: 36
            title:
              type: string
              example: "Some category"
              minLength: 1
              maxLength: 255
        user:
          type: string
          example: "user"
        views:
          type: number
          format: integer
        pub_datetime:
          type: string
          example: "2021-12-17T19:26:52.517853Z"
    ListProjects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
